syntax="proto2";
package rong.Paxos;


enum OpCode {
    kPaxosLease             = 1;  // Lease选主使用
    kPaxosBasic             = 2;  // 普通用
};


enum EntryType {
    kNormal                 = 1;
    kConfigure              = 2;
    kNoop                   = 3;
};

message Entry {
    required EntryType type = 1;

    optional bytes data     = 4;
    optional bytes context  = 5;
};


// PaxosLease

enum LeaseMessageType {

    kLPrepareRequest        = 1;
    kLPrepareRejected       = 2;
    kLPreparePreviouslyAccepted = 3;
    kLPrepareCurrentlyOpen  = 4;

    kLProposeRequest        = 5;
    kLProposeRejected       = 6;
    kLProposeAccepted       = 7;
    
    kLProposeLearnOpen      = 8;
};

message LeaseMessage {

    required LeaseMessageType   type        = 1;
    required uint64             node_id     = 2;
    required uint64             proposal_id = 3;
    required uint64             instance_id = 4;
    
    optional uint64             accepted_proposal_id = 6;
    optional uint64             lease_owner = 7;
    optional uint64             local_expire_time = 8;
};


// PaxosBasic
enum BasicMessageType {

    kBPrepareRequest        = 1;
    kBPrepareRejected       = 2;
    kBPreparePreviouslyAccepted = 3;
    kBPrepareCurrentlyOpen  = 4;    // 之前没有收到accpet，可以让Proposer指定

    kBProposeRequest        = 5;
    kBProposeRejected       = 6;
    kBProposeAccepted       = 7;

    // 当value被chosen之后，proposer (kBProposeLearnValue) -> learner
    //     如果learner学习成功，则返回kBProposeRequestChosen并使instance_id为原先值
    //     否则instance_id就是需要learner返回的
    //
    kBProposeLearnValue     = 8;    // 发送具体的value
    kBProposeRequestChosen  = 9;    // 对于缺少的value，可以通过该值进行学习
    kBProposeStartCatchup   = 10;   // 快照
};


message BasicMessage {

    required BasicMessageType   type        = 1;
    required uint64             node_id     = 2;
    required uint64             proposal_id = 3;
    required uint64             instance_id = 4;
    
    optional uint64             accepted_proposal_id = 6;
    optional uint64             promised_proposal_id = 7;
    optional bytes              value       = 8;
};

